/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar buildMsg = 'caching textures + refact';\nconsole.log('%c BUILD %c' + buildMsg, 'background: gold; color: darkgreen', 'background: green; color: white'); //Fetch USERS and cache their pics \n\nvar USERS; //init Users\n\nnewFetchedPic = function newFetchedPic(index) {\n  return new THREE.TextureLoader().load(\"/userdata/pic/Frame-\" + index + \".png\");\n};\n\nvar getUsers = new XMLHttpRequest();\n\ngetUsers.onreadystatechange = function () {\n  if (this.readyState == 4 && this.status == 200) {\n    USERS = JSON.parse(this.responseText); //Cache pics for existing rows\n\n    USERS.map(function (i) {\n      return +i.pic >= 0 ? i.fetchedPic = newFetchedPic(i.pic) : void null;\n    }); //Cache for unexisting users\n\n    var USERSexist = USERS.map(function (i) {\n      return i.pic;\n    });\n    console.time();\n\n    for (var _picindex = 0; _picindex <= 62; _picindex++) {\n      USERSexist.indexOf(_picindex) == -1 ? USERS.push({\n        //Load all 62 textures\n        name: 'id' + _picindex,\n        location: 'London',\n        pic: _picindex,\n        fetchedPic: newFetchedPic(_picindex),\n        audio: 'https://cdn.glitch.com/ff820234-7fc5-4317-a00a-ad183b72978d%2Fmoonlight.mp3?1512000557559'\n      }) : void null;\n    }\n\n    console.timeEnd();\n    USERS.sort(function (a, b) {\n      return a.pic - b.pic;\n    }); // console.table(USERS);\n  }\n};\n\ngetUsers.open(\"GET\", '/userdata/users.json', true);\ngetUsers.send(); //Audio\n//Init ctx\n\nvar initialResume = false;\nvar ctx;\nvar audioSrc;\nvar analyser;\nvar audio = $(\"#audio\")[0]; // This gets the exact lenght of the stroke (.stroke) around the play icon\n\nvar stroke = $(\".stroke\")[0];\nvar strokeLength = stroke.getTotalLength();\nconsole.log(strokeLength); // Toggle the animation-play-state of the \".stroke\" on clicking the \".playicon\" -container\n\nvar playIcon = $('.playicon');\nvar play = $('.play');\nvar pause = $('.pause');\n\naudio.stop = function () {\n  audio.pause();\n  audio.currentTime = 0;\n};\n\naudio.canPlay = false;\naudio.playState = \"paused\";\n$('audio').on('canplaythrough', function () {\n  return audio.canPlay = true;\n});\nplayIcon.click(function () {\n  if (audio.playState == \"paused\" || audio.playState == \"\") {\n    pause.removeClass('hidden');\n    play.addClass('hidden');\n    audio.playState = \"running\";\n    audio.play();\n  } else if (audio.playState == \"running\") {\n    play.removeClass('hidden');\n    pause.addClass('hidden');\n    audio.playState = \"paused\"; // Logging the animation-play-state to the console:\n\n    audio.stop();\n  }\n\n  log(audio.playState);\n}); //\n\nvar RUNNING_INDEXES = [];\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.01, 1000);\nvar raycaster = new THREE.Raycaster();\nraycaster.params.Points.threshold = 0.07;\nvar raycasterPlanes = new THREE.Raycaster();\nraycasterPlanes.params.Points.threshold = 0.0001;\nvar sectsWithPlanes;\nInfo = $(\".info\");\nDescript = $(\".descripto\");\nDescriptName = $(\"#name\")[0];\nDescriptLocation = $(\"#location\")[0];\nvar MOUSE = new THREE.Vector2();\nvar clock = new THREE.Clock();\nvar picindex = 0,\n    looped_picindex = false;\nvar PLANE_GROUP = new THREE.Group();\nscene.add(PLANE_GROUP);\nvar windowX = window.innerWidth / 2;\nvar windowY = window.innerHeight / 2;\ncamera.position.set(0, 0, 9); //GLOBAL EVENTS\n\nfunction onWindowResize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nonMouseMove = function onMouseMove(event) {\n  event.preventDefault();\n  MOUSE.x = event.clientX / window.innerWidth * 2 - 1;\n  MOUSE.y = -(event.clientY / window.innerHeight) * 2 + 1;\n  raycaster.setFromCamera(MOUSE, camera);\n};\n\nvar Selected, preSelected;\nvar focusPlaneName = -1; // Home view by default, no Plane clicked\n\nonMouseClick = function onMouseClick(event) {\n  if (!initialResume) {\n    //Google audio policy\n    initialResume = true;\n    ctx = new AudioContext();\n    audioSrc = ctx.createMediaElementSource(audio);\n    audioSrc.connect(ctx.destination);\n    analyser = ctx.createAnalyser();\n    audioSrc.connect(analyser);\n    ctx.resume().then(function () {\n      log('Context resumed successfully');\n    });\n  }\n\n  if (sectsWithPlanes[0]) {\n    //Home && Plane \n    Selected = sectsWithPlanes[0].object;\n    DescriptName.innerHTML = Selected.info.name;\n    DescriptLocation.innerHTML = Selected.info.location;\n    audio.src = Selected.info.audio;\n    audio.canPlay = false;\n    audio.load();\n    Info.removeClass('hidden');\n    Info.addClass('appear');\n    pause.addClass('hidden');\n    play.removeClass('hidden');\n    audio.playState = \"paused\"; // audio.playState = \"paused\"\n\n    camTweenOut && camTweenOut.stop();\n    preSelected && (preSelected.dissolving = true, preSelected.camFocusMe().stop(), preSelected.resizingChain = true);\n    preSelected = Selected;\n    Selected.dissolving = false;\n    focusPlaneName = Selected.name; //camFocusme\n\n    Selected.camFocusMe().start(); //focus\n\n    Selected.resizingChain = false;\n    Global.map(function (i, j) {\n      i.to1.stop(), i.to0.start();\n    });\n    CosmoDust.to1();\n  } else if (event.target.tagName == \"CANVAS\") {\n    // Move out\n    focusPlaneName = -1;\n    Selected && (Selected.dissolving = true, Selected.resizingChain = true); //Tweens activate\n\n    camTweenOut.start();\n    Global.map(function (i, j) {\n      i.to0.stop(), i.to1.start();\n    });\n    CosmoDust.to0();\n    Info.addClass('hidden');\n    pause.addClass('hidden');\n    play.removeClass('hidden');\n    audio.playState = \"paused\";\n    audio.stop();\n  }\n}; //GLOBAL FUNCTIONS\n\n\nlog = function log(s) {\n  return console.log(s);\n};\n\nConvertToWorld = function ConvertToWorld(index) {\n  return pointsClouds.geometry.vertices[index].clone().applyMatrix4(pointsClouds.matrixWorld);\n};\n\ncreateCanvasMaterial = function createCanvasMaterial(color, size) {\n  var matCanvas = document.createElement('canvas');\n  matCanvas.width = matCanvas.height = size;\n  var matContext = matCanvas.getContext('2d'); // create exture object from canvas.\n\n  var texture = new THREE.Texture(matCanvas); // Draw a circle\n\n  var center = size / 2;\n  matContext.beginPath();\n  matContext.arc(center, center, size / 2, 0, 2 * Math.PI, false);\n  matContext.closePath();\n  matContext.fillStyle = color;\n  matContext.fill(); // need to set needsUpdate\n\n  texture.needsUpdate = true; // return a texture made from the canvas\n\n  return texture;\n};\n\nvar camTweenOut = new TWEEN.Tween(camera.position).to({\n  x: 0,\n  y: 0,\n  z: 9\n}, 1600).easing(TWEEN.Easing.Quadratic.InOut);\nvar camTweenFocusMe;\nvar renderer = new THREE.WebGLRenderer({\n  antialias: true\n});\nrenderer.setClearColor(0x13131B, 1);\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement); //Dust\n\nparameters = [[[1, 1, 1], 0.9], [[0.95, 1, 0.5], 1], [[0.90, 1, 0.5], 1.4], [[0.85, 1, 0.5], 1.1], [[1, 1, 1], 0.8]];\nparameterCount = parameters.length;\nDustGeometry = new THREE.Geometry();\n/*\tNO ONE SAID ANYTHING ABOUT MATH! UGH!\t*/\n\nbg_particles_count = 1000;\n/* Leagues under the sea */\n//Particles\n\nfor (i = 0; i < bg_particles_count; i++) {\n  var vertex = new THREE.Vector3();\n  vertex.x = Math.random() * 2000 - 1000;\n  vertex.y = Math.random() * 2000 - 1000;\n  vertex.z = Math.random() * 2000 - 1000;\n  DustGeometry.vertices.push(vertex);\n}\n\nvar CosmoDust = new THREE.Group();\nvar DustMaterials = [];\n\nfor (i = 0; i < parameterCount; i++) {\n  color = parameters[i][0];\n  size = parameters[i][1];\n  DustMaterials[i] = new THREE.PointsMaterial({\n    size: size,\n    map: createCanvasMaterial('white', 256),\n    transparent: true,\n    depthWrite: true,\n    opacity: 0\n  });\n  particles = new THREE.Points(DustGeometry, DustMaterials[i]);\n  particles.rotation.x = Math.random() * 6;\n  particles.rotation.y = Math.random() * 6;\n  particles.rotation.z = Math.random() * 6;\n  CosmoDust.add(particles);\n}\n\nscene.add(CosmoDust); //globus\n\nvar SphereGeometry = new THREE.IcosahedronGeometry(1.97, 3);\nvar SphereMaterial = new THREE.MeshBasicMaterial({\n  color: 0x13131B,\n  transparent: true\n});\nvar SphereMesh = new THREE.Mesh(SphereGeometry, SphereMaterial); //wireFrame\n\nvar lineMat = new THREE.LineBasicMaterial({\n  color: 0x3C4051\n});\nvar geometryWire = new THREE.IcosahedronBufferGeometry(2, 2);\nvar wireframe = new THREE.WireframeGeometry(geometryWire);\nvar line = new THREE.LineSegments(wireframe, lineMat);\nline.material.opacity = 1;\nline.material.transparent = true; //pointClouds\n\nvar pointGeo = new THREE.SphereGeometry(3.5, 17, 17);\nvar pointMat = new THREE.PointsMaterial({\n  size: 0.04,\n  map: createCanvasMaterial('white', 256),\n  transparent: true,\n  depthWrite: false\n});\npointGeo.vertices.forEach(function (vertex) {\n  vertex.color = vertex.x += Math.random() - 0.5;\n  vertex.y += Math.random() - 0.5;\n  vertex.z += Math.random() - 0.5;\n});\nvar pointsClouds = new THREE.Points(pointGeo, pointMat);\nvar Globus = new THREE.Group();\nGlobus.add(line, SphereMesh);\nvar GlobusAndPoints = new THREE.Group();\nGlobusAndPoints.add(Globus, pointsClouds); // scene.add(Globus);\n\nscene.add(GlobusAndPoints);\ndocument.addEventListener('mousemove', onMouseMove, false);\ndocument.addEventListener('mouseup', onMouseClick, false); //OPACITY TWEENS\n\nCosmoDust.opacity1 = [];\nCosmoDust.opacity0 = [];\nCosmoDust.children.map(function (i) {\n  CosmoDust.opacity0.push(new TWEEN.Tween(i.material).to({\n    opacity: 0\n  }, 2000).easing(TWEEN.Easing.Exponential.Out));\n  CosmoDust.opacity1.push(new TWEEN.Tween(i.material).to({\n    opacity: 1\n  }, 2000).easing(TWEEN.Easing.Exponential.Out));\n});\n\nCosmoDust.to0 = function () {\n  CosmoDust.opacity1.map(function (i) {\n    return i.end();\n  });\n  CosmoDust.opacity0.map(function (i) {\n    return i.start();\n  });\n};\n\nCosmoDust.to1 = function () {\n  CosmoDust.opacity0.map(function (i) {\n    return i.end();\n  });\n  CosmoDust.opacity1.map(function (i) {\n    return i.start();\n  });\n};\n\nvar Global = [Globus.children[0], Globus.children[1], pointsClouds];\nGlobal.map(function (i, j) {\n  i.to0 = new TWEEN.Tween(i.material).to({\n    opacity: 0\n  }, 1500).easing(TWEEN.Easing.Exponential.Out).onComplete(function () {\n    return i.visible = false;\n  });\n  i.to1 = new TWEEN.Tween(i.material).to({\n    opacity: 1\n  }, 2000).easing(TWEEN.Easing.Quadratic.InOut).onStart(function () {\n    return i.visible = true;\n  });\n});\nwindow.addEventListener('resize', onWindowResize, false); // getUserDescript =(index)=> USERS.find((e)=> e.pic == index);\n//RENDER\n\nrender = function render(time) {\n  TWEEN.update();\n\n  if (!audio.canPlay) {\n    // stroke.style.animation = \"dash 1.8s linear infinite paused\";\n    log('loading');\n  } else {// stroke.style.animation = \"\";\n  }\n\n  raycasterPlanes.setFromCamera(MOUSE, camera);\n  sectsWithPlanes = raycasterPlanes.intersectObjects(PLANE_GROUP.children, true);\n  sectsWithPlanes[0] ? document.body.style.cursor = \"pointer\" : document.body.style.cursor = \"default\";\n\n  if (focusPlaneName == -1) {\n    //Home view\n    var sectsWithPoints = raycaster.intersectObjects([pointsClouds]);\n\n    if (sectsWithPoints[0]) {\n      //cursor on a point\n      if (RUNNING_INDEXES.indexOf(sectsWithPoints[0].index) == -1) {\n        //Check point for existence\n        picindex < 61 ? picindex++ : (picindex = 0, looped_picindex = true); // log(RUNNING_INDEXES);\n\n        RUNNING_INDEXES.push(sectsWithPoints[0].index);\n        var newPlane = new PlaneAvatar(PLANE_GROUP, sectsWithPoints[0].index, !looped_picindex ? USERS[picindex] : Object.assign(USERS[picindex], {\n          name: 'id' + sectsWithPoints[0].index,\n          location: 'London',\n          audio: 'https://cdn.glitch.com/ff820234-7fc5-4317-a00a-ad183b72978d%2Fmoonlight.mp3?1512000557559'\n        }));\n        newPlane.scale.set(0.001, 0.001, 0.001);\n        newPlane.enlargeTween.start();\n        PLANE_GROUP.add(newPlane);\n      } else {\n        var planeToEnlarge = PLANE_GROUP.children.find(function (e) {\n          return e.name == sectsWithPoints[0].index;\n        });\n        planeToEnlarge != undefined ? planeToEnlarge.dissolving = false : void null;\n      }\n    }\n\n    ;\n\n    if (sectsWithPlanes[0]) {\n      //Enlarge existing one not dissolved Plane\n      var _planeToEnlarge = sectsWithPlanes[0].object;\n      _planeToEnlarge.dissolving = false; //flag to enlarge\n    }\n\n    ;\n  }\n\n  ;\n  PLANE_GROUP.children.map(function (i, j) {\n    i.run(ConvertToWorld(i.name)); //change Plane position\n\n    i.updateSize(); //every Plane size update\n  }); //FIND INTERSECTION\n\n  camera.updateMatrixWorld();\n  renderer.render(scene, camera);\n};\n\npointsClouds.geometry.verticesNeedUpdate = true;\npointsClouds.matrixAutoUpdate = true;\n\nvar PlaneAvatar =\n/*#__PURE__*/\nfunction (_THREE$Mesh) {\n  _inherits(PlaneAvatar, _THREE$Mesh);\n\n  function PlaneAvatar(Group, AnchorPointIndex, oINFO) {\n    var _this;\n\n    _classCallCheck(this, PlaneAvatar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaneAvatar).call(this, new THREE.CircleGeometry(0.35, 64, 64), new THREE.MeshBasicMaterial({\n      map: oINFO.fetchedPic\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"run\", function (vector) {\n      return _this.position.set(vector.x, vector.y, vector.z);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"camFocusMe\", function (t) {\n      return _this.camTweenFocusMe = new TWEEN.Tween(camera.position).to({\n        x: _this.position.x + 0.4,\n        y: _this.position.y,\n        z: _this.position.z + 3\n      }, 1000).easing(TWEEN.Easing.Quadratic.InOut);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSize\", function () {\n      return _this.dissolving ? (_this.enlargeTween.stop(), _this.dissolveTween.start()) : (_this.dissolveTween.stop(), _this.enlargeTween.start());\n    });\n\n    _this.name = AnchorPointIndex;\n    _this.info = {\n      name: oINFO.name,\n      location: oINFO.location,\n      audio: oINFO.audio ? oINFO.audio : 'https://cdn.glitch.com/ff820234-7fc5-4317-a00a-ad183b72978d%2Fmoonlight.mp3?1512000557559'\n    }; // console.table(this.info)\n\n    _this.dissolving = true; //Dissolving by default\n\n    _this.resizingChain = true;\n    _this.dissolveTween = new TWEEN.Tween(_this.scale).to({\n      x: 0.001,\n      y: 0.001,\n      z: 0.001\n    }, 8000).easing(TWEEN.Easing.Quadratic.Out);\n    _this.enlargeTween = new TWEEN.Tween(_this.scale).to({\n      x: 1,\n      y: 1,\n      z: 1\n    }, 650).easing(TWEEN.Easing.Quadratic.Out).onStart(function () {\n      return _this.material.opacity = 1;\n    }).onUpdate(function () {\n      if (_this.scale.z > 0.999 && _this.resizingChain) {\n        //About to complete\n        _this.dissolving = true; //Now shall dissolve again by default\n      }\n    });\n    _this.camTweenFocusMe; //init variable\n\n    Group.add(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  return PlaneAvatar;\n}(THREE.Mesh); //rotation on mouse click and drag\n\n\nfunction groupRotation() {\n  var mouseDown = false,\n      mouseX = 0,\n      mouseY = 0;\n\n  function onMouseMove(evt) {\n    if (!mouseDown) {\n      return;\n    }\n\n    evt.preventDefault();\n    var deltaX = evt.clientX - mouseX,\n        deltaY = evt.clientY - mouseY;\n    mouseX = evt.clientX;\n    mouseY = evt.clientY;\n    rotateScene(deltaX / 7, deltaY / 7);\n  }\n\n  function onMouseDown(evt) {\n    evt.preventDefault();\n    mouseDown = true;\n    mouseX = evt.clientX;\n    mouseY = evt.clientY;\n  }\n\n  function onMouseUp(evt) {\n    evt.preventDefault();\n    mouseDown = false;\n  }\n\n  var ee = document.body.appendChild(renderer.domElement);\n  ee.addEventListener('mousemove', function (e) {\n    onMouseMove(e);\n  }, false);\n  ee.addEventListener('mousedown', function (e) {\n    onMouseDown(e);\n  }, false);\n  ee.addEventListener('mouseup', function (e) {\n    onMouseUp(e);\n  }, false);\n\n  function rotateScene(deltaX, deltaY) {\n    Globus.rotation.y += deltaX / 100;\n    Globus.rotation.x += deltaY / 100;\n    pointsClouds.rotation.y += deltaX / 100;\n    pointsClouds.rotation.x += deltaY / 100;\n  }\n}\n\ngroupRotation();\n\nanimate = function (_animate) {\n  function animate() {\n    return _animate.apply(this, arguments);\n  }\n\n  animate.toString = function () {\n    return _animate.toString();\n  };\n\n  return animate;\n}(function () {\n  window.requestAnimationFrame(animate);\n  var time = clock.getElapsedTime();\n  render(time);\n\n  if (!Selected || focusPlaneName == -1) {\n    Globus.rotation.x -= 0.0003;\n    Globus.rotation.y -= 0.0003;\n    pointsClouds.rotation.x -= 0.0002;\n    pointsClouds.rotation.y -= 0.0002;\n  }\n\n  CosmoDust.children.map(function (i, j) {\n    return i.rotation.y = Date.now() * 0.0004;\n  });\n});\n\nwindow.requestAnimationFrame(animate);\n\n//# sourceURL=webpack:///./src/app.js?");

/***/ })

/******/ });